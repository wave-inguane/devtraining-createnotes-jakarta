<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, $rootScope, $timeout, spUtil, $location, $window, nowAttachmentHandler, $log, spAriaUtil) {
	var c = this;
	$scope.smartMyID = 0;
	$scope.mandatory = [];
	$scope.errorMessages = [];
	$scope.data.show_sql = false;
	$scope.saveButtonSuffix = spUtil.getAccelerator('s');
	$scope.adminMenu = {
		encodedPageUrl: encodeURIComponent($location.url()),
		getClientScriptCount: function() {
			var count = 0;
			if ($scope.data.f.client_script) {
				count += $scope.data.f.client_script.onChange.length;
				count += $scope.data.f.client_script.onLoad.length;
				count += $scope.data.f.client_script.onSubmit.length;
			}
			return count;
		}
	};

		//check URL
	// Delete button
	$scope.warningShow = false;
	$scope.deleteButton = false;
	var url = $location.absUrl();
	//var baseUrl = location.origin;
    if(url.indexOf('x_smart_attach_manager') != -1){
				//$scope.warningShow = true;
				$scope.deleteButton = true;
			 // spUtil.addErrorMessage('Warning! Attachment submitted will be visible by the Scholar');
		
		}
	
	/*
	$scope.changePage = function() {ng-click="changePage()" 
		$scope.server.get({
			action: 'snDeleteNote'
		}).then(function(r){
			if(r.data.noteID){
				window.location.href = baseUrl + "/admin?id=suser&table=x_smart_scholar_flat&sys_id=" +   r.data.smart_user_sysID   +"&view=sp";
			}
		});
	}
	*/
							

	$scope.getUIActions = function(type) {
		if ($scope.data.disableUIActions)
			return [];
		if (type) {
			return $scope.data.f._ui_actions.filter(function(action) {
				//We handle the primary action button separately.
				return !action.primary && action['is_' + type];
			});
		} else {
			return $scope.data.f._ui_actions;
		}
	}

	$scope.getPrimaryAction = function() {
		var primaryActions = $scope.data.f._ui_actions.filter(function(action) {
			return action.primary;
		});
		return (primaryActions.length) ? primaryActions[0] : null;
	}

	$scope.getUIActionContextMenu = function(event) {
		var menu = [];
		if (event.ctrlKey)
			return menu;

		var contextActions = $scope.getUIActions('context');
		contextActions.forEach(function(action) {
			menu.push([action.name, function() {
				$scope.triggerUIAction(action);
			}]);
		});

		if (contextActions.length > 0)
			menu.push(null);
		menu.push([$scope.data.exportPDFMsg, function() {exportPDF("");}]);
		menu.push([$scope.data.exportPDFLandMsg, function() {exportPDF('true');}]);

		return menu;
	}

	function exportPDF(landscape) {
		$window.open("/" + $scope.data.f.table + ".do?PDF&landscape=" + landscape + "&sys_id=" + $scope.data.sys_id + "&sysparm_view=" + $scope.data.f.view);
	}

	//trigger the primary UI Action on save (if there is one)
	var deregister = $scope.$on('$sp.save', function() {
		var primaryAction = $scope.getPrimaryAction();
		if (primaryAction)
			$scope.triggerUIAction(primaryAction);
	});
	$scope.$on('$destroy', function() {deregister()});

	$scope.triggerUIAction = function(action) {
		if ($scope.data.disableUIActions && !action.primary) {
			return;
		}

		var activeElement = document.activeElement;
		if (activeElement) {
			activeElement.blur();
		}

		$timeout(function() {
			if (g_form) {
				g_form.submit(action.action_name || action.sys_id);

			}
		});
	}
	
/*
	var url = $location.absUrl();
	var baseUrl = location.origin;
		$scope.recSave = function(){//ng-click="recSave()"ng-click="recSave()"
		if(url.indexOf('x_smart_correspondence') != -1){
			$scope.server.get({
				action: 'snGetScholarSysId'
			}).then(function(r){
				
					spUtil.addErrorMessage("I am saving .... back from server");
				if(r.data.noteIDd){
					window.location.href = baseUrl + "/admin?id=suser&table=x_smart_scholar_flat&sys_id=" +   r.data.smart_user_sysID   +"&view=sp";
				}
			});
		}
	}
*/
	/*
	
				$scope.server.get({
					action: 'snGetScholarSysId'
				}).then(function(r){
					if(r.data.noteID){
						window.location.href = baseUrl + "/admin?id=suser&table=x_smart_scholar_flat&sys_id=" +   r.data.smart_user_sysID   +"&view=sp";
					}
				});

	*/
	
	$scope.$on("spModel.uiActionComplete", function(evt, response) {
		var sysID = (response.isInsert) ? response.sys_id : $scope.data.sys_id;
		loadForm($scope.data.table, sysID).then(constructResponseHandler(response));
	});

	function constructResponseHandler(response) {
		return function() {
			var message;
			var eventName = "sp.form.record.updated";
			if (response.isInsert) {
				message = $scope.data.recordAddedMsg;
				var search = $location.search();
				search.sys_id = response.sys_id;
				search.spa = 1;
				$location.search(search).replace();
			} else
				message = $scope.data.updatedMsg;

			$scope.data.hideRelatedLists = hideRelatedLists();
			$scope.$emit(eventName, $scope.data.f._fields);
			$rootScope.$broadcast(eventName, $scope.data.f._fields);
			$scope.status = message;
			spUtil.addTrivialMessage(message);
			$timeout(clearStatus, 2000);
		}
	}

	var ctrl = this;
	// switch forms
	var unregister = $scope.$on('$sp.list.click', onListClick);
	$scope.$on("$destroy", function() {
		unregister();
	})

	function onListClick(evt,arg) {
		loadForm(arg.table, arg.sys_id);
	}

	function loadForm(table, sys_id){
		var f = {};
		$scope.data.table = f.table = table;
		$scope.data.sys_id = f.sys_id = sys_id;
		f.view = $scope.data.view;
		return $scope.server.update().then(setupAttachmentHandler);
	}

	function openRelatedList(e, queryString){
		// todo: Open this in a modal
		$location.search(queryString);
		e.preventDefault();
	}

	$scope.$on('spModel.fields.rendered', function() {
		if (ctrl.panels){
			ctrl.panels.removeClass('shift-out').addClass('shift-in');
		}
	});

	var g_form;
	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		if (gFormInstance.getTableName() == $scope.data.f.table){
			g_form = gFormInstance;
		
			if(c.data.hide_attachments){
				// Wave 3/4/2018
				document.getElementsByClassName("sp-attachment-manager")[0].style.display = 'none';
			}
			// Wave 3/5/2018
			var url = $location.absUrl();
			if(url.indexOf('x_smart_attach_manager') != -1){
				var refs = document.getElementsByClassName("h4");
				var str = refs[0].innerHTML;

				$("legend.h4").html('<div style="text-align:center;"><font size="5" color="red" face="helvetica">Warning! Attachment submitted will be visible by the Scholar</font></div><span>'+str+'</span>');
			}
			
			//url = $location.absUrl();
			if(url.indexOf('x_smart_correspondence') != -1){
				g_form.setDisplay('correspondence',false);
			}
			
			// Wave 3/5/2018
		//!g_form.getBooleanValue('bulk_title') &&
			if( !g_form.getBooleanValue('bulk_title') && (g_form.getValue('title')==='' || g_form.getValue('title') === 'undefined')){
			 
				
			//	var fileName = document.getElementsByClassName("attached-file")[0];//unstyled-list 
				//var fileName = $("ul.unstyled-list").$("li.attached-file");
				/*
				var $nodes = document.getElementsByTagName('button');
				for (var $i = 0, $length = $nodes.length; $i < $length; $i++) {
          //$nodes[$i]
					   g_form.showFieldMsg('number',''+ $nodes[$i].innerHTML + '','error');
				}
				 */
				//   g_form.showFieldMsg('title',''+ 'Wave is debugging... ' + '','error');
				//g_form.setValue('title',fileName);
				//g_form.setMandatory('title',false);
				//g_form.setReadOnly('title',true);
				//g_form.clearValue('bulk_title');
				//	x_smart_correspondence
				
				if (g_form.getValue('title')===''){
					$scope.deleteButton = false;
				}
				//....................................
				/*
				c.server.get({
					action: 'updateCorr',
					SmartID: g_form.smart_id,
					EmailAddress: g_form.email_address
	
				}).then(function(r) {
					// used to updated the view if needed
					//r.data 
					
					spUtil.addErrorMessage( g_form.smart_id );
					spUtil.addErrorMessage( g_form.email_address);
					spUtil.addErrorMessage("Back from server");
				});
				*/
			}
		}
	});

	// Show or hide related lists
	$scope.$watch('data.f._related_lists', function(){
		$scope.data.hideRelatedLists = hideRelatedLists();
	}, true);

	function hideRelatedLists() {
		if (!$scope.data.f._related_lists)
			return true;

		if ($scope.options.hideRelatedLists == true)
			return true;

		if ($scope.data.sys_id == '-1')
			return true;

		// If all related lists are visible=false then hide
		if ($scope.data.f._related_lists.length > 0) {
			for (var i in $scope.data.f._related_lists) {
				var list = $scope.data.f._related_lists[i];
				if (list.visible) {
					return false;
				}
			}
		}
		return true;
	}

	function clearStatus() {
		$scope.status = "";
	}

	function setupAttachmentHandler(){
		$scope.attachmentHandler = new nowAttachmentHandler(appendDone, appendError);

		$timeout(function() {
			var sizeLimit = 1024 * 1024 * 24; // 24MB
			$scope.attachmentHandler.setParams($scope.data.table, $scope.data.f._attachmentGUID, sizeLimit);
		});

		$scope.$on('dialog.upload_too_large.show', function(e){
			$log.error($scope.data.largeAttachmentMsg);
			spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
		});
	}
	setupAttachmentHandler();

	function appendDone() {
		// don't know here whether upload succeeded, so can't show msg either way
		$scope.$broadcast("sp.attachments.update", $scope.data.f._attachmentGUID);
		spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
	}

	function appendError(error) {
		$scope.errorMessages.push(error);
		spUtil.addErrorMessage(error.msg + error.fileName);
	}
	

}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>GLOBAL Form STRY2559117_1</description>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>global-form-stry2559117-1</id>
        <internal>false</internal>
        <link/>
        <name>GLOBAL Form STRY2559117_1</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[// form functionality - URL parameter driven
(function($sp, input, data, options, gs) {
  /* "use strict"; -linter issues */
  // populate the 'data' variable

	//Wave 3/8/2018
	/*
	if (input.action == 'snDeleteNote') {
		var delNote = new GlideRecord('x_smart_attach_manager');
		var sysID = $sp.getParameter("sys_id");
		if(delNote.get(sysID)){
			data.smart_user_sysID =  delNote.scholar_flat_record.sys_id+'';
			data.noteID = sysID;
			delNote.deleteRecord();
		}
	}
	*/
	
	/*
	if (input.action == 'snGetScholarSysId') {
		var grNote = new GlideRecord('x_smart_correspondence');
		var ssysID = $sp.getParameter("sys_id");
			gs.addErrorMessage("in server side" + ssysID );
		if(grNote.get(ssysID)){
			data.noteIDd = ssysID;
			data.smart_user_sysID =  grNote.correspondence.sys_id+'';
		}
	}
	*/
	
	// Wave 3/5/2018
	//Determines if the current user has the specified role within a specified group.
	var group = new GlideRecord('sys_user_group');
	group.addQuery('name', 'SMART Internal Users');
	group.setLimit(1);
	group.query();
	if (group.next()) {
		//gs.addInfoMessage(group.name);
if (gs.hasRoleInGroup('u_smart_role', group) ||
			 gs.hasRole('smart_internal') || gs.hasRole('x_smart.internal') || gs.hasRole('x_smart.school_read') || gs.hasRole('admin')){
			//gs.addInfoMessage('User has role in group');
			data.hide_attachments = false;
		} else {
			//gs.addErrorMessage('User does NOT have role in group');
				data.hide_attachments = true;
		}
		
	}
	
	data.attachmentUploadSuccessMsg = gs.getMessage("Attachment upload was successful");
	data.recordAddedMsg = gs.getMessage("Record Added");
	data.updatedMsg = gs.getMessage("updated_uppercase");
	data.exportPDFMsg = gs.getMessage("Export to PDF");
	data.exportPDFLandMsg = gs.getMessage("Export to PDF (landscape)");
	data.addAttachmentMsg = gs.getMessage("Add an attachment");
	data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "24MB");
	data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");
	
	data.isAdmin = gs.hasRightsTo('sp/configure.all/execute', null);
	data.emptyStateTemplate = options.empty_state_template;
	data.disableUIActions = options.disableUIActions === "true";
	data.hideRelatedLists = options.hideRelatedLists || false;

	if (input) {
		data.table = input.table;
		data.sys_id = input.sys_id;
		data.view = input.view;
		var result = {};
		if (input._fields) {
			result = $sp.saveRecord(input.table, input.sys_id, input._fields);
			data.sys_id = result.sys_id;
		}
		if (input.sys_id == '-1')
			data.isNewRecord = true;
		
	
	} else {
		data.table = options.table || $sp.getParameter("t") || $sp.getParameter("table") || $sp.getParameter("sl_table");
		data.sys_id = options.sys_id || $sp.getParameter("sys_id") || $sp.getParameter("sl_sys_id");
		data.view = options.view || $sp.getParameter("v") || $sp.getParameter("view"); // no default
	}

	data.query = $sp.getParameter("query") || options.query;
	data.f = {};
	if (!data.table)
		return;
	
	
	
	// Form widget is not a supported way to view an attachment
	if (data.table == "sys_attachment") {
		data.tableUnsupported = true;
		return;
	}

	if (!GlideTableDescriptor.isValid(data.table))
		return;

	if (!data.sys_id)
		return;

	var rec = $sp.getRecord(data.table, data.sys_id);
	data.isValid = rec.isValid() || data.sys_id == "-1";
	if (!data.isValid)
		return;

	data.table = rec.getRecordClassName();
	data.tableHierarchy = GlideDBObjectManager.getTables(data.table).toArray().join();
	data.canWrite = rec.canWrite();
	data.canAttach = data.canWrite && gs.hasRole(gs.getProperty('glide.attachment.role')) && !GlideTableDescriptor.get(data.table).getED().getBooleanAttribute("no_attachment");
	data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

	// Activity formatter is hardcoded to set specific options
	for (var f in data.f._formatters) {
		var fm = data.f._formatters[f];
		if (fm.formatter == "activity.xml") {
			fm.hardcoded = true;
			fm.widgetInstance = $sp.getWidget('widget-ticket-conversation',
																{table: data.table,
																 sys_id: data.sys_id,
																 includeExtended: true,
																 title: "${Activity}",
																 use_dynamic_placeholder: true,
																 btnLabel: "${Post}"});
		} else
			fm.widgetInstance = $sp.getWidget(fm.widget, data);
	}
	
})($sp, input, data, options, gs);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-03-09 06:56:32</sys_created_on>
        <sys_id>59eaaae44fb453003b564ea18110c7f7</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>GLOBAL Form STRY2559117_1</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_59eaaae44fb453003b564ea18110c7f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-03-09 07:00:57</sys_updated_on>
        <template><![CDATA[<!--
<p>
jQuery is not loaded.
</p>
-->

<div ng-if="!data.isValid && !data.emptyStateTemplate" class="panel panel-default">
  <div class="panel-body wrapper-lg text-center">
    <span ng-if="!data.tableUnsupported">${Record not found}</span>
    <span ng-if="data.tableUnsupported">${Form view not supported for requested table}</span>
  </div>
</div>

<div ng-if="!data.isValid && data.emptyStateTemplate" class="panel-shift">
  <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
</div>

<div ng-if="data.isValid" class="panel-shift">
  <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && data.emptyStateTemplate">
    <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
  </div>

  <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && !data.emptyStateTemplate">
    <div class="panel panel-default">
      <div class="panel-heading"><span class="panel-title">{{data.f.title}}</span> 
        <span ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span>
      
      </div>
      <div class="panel-body wrapper-lg text-center">
        ${No elements to display}
      </div>
    </div>
  </div>

  <div class="panel panel-default" ng-if="data.f._view.length || !data.hideRelatedLists" >
    <div class="panel-heading" ng-if="data.f.title.length" sp-context-menu="getUIActionContextMenu(event)">
      	<span class="dropdown m-r-xs" ng-if="(data.isAdmin || getUIActions('context').length > 0) && options.omitHeaderOptions != 'true'">
            <button aria-label="${Form menu}" class="btn btn-form-menu dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="adminMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
            <ul class="dropdown-menu" aria-labelledby="adminMenu">
              <li ng-if="::data.isAdmin"><a href="/{{data.f.table}}.do?sys_id={{data.f.sys_id}}" target="_blank">${Open in platform}</a></li>
              <li ng-if="::data.isAdmin" class="dropdown-header">${Configure}</li>
              <li ng-if="::data.isAdmin"><a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&sysparm_list={{data.f._sections[0].id}}&sysparm_form=section&sysparm_view={{data.f.view}}" target="_blank">${Form Layout}</a></li>
              <li ng-if="::data.isAdmin"><a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&sysparm_list={{data.f.table}}&sysparm_form=related_list&sysparm_view={{data.f.view}}" target="_blank">${Related Lists}</a></li>
              <li ng-if="::data.isAdmin"><a href="?id=lf&table=sys_ui_policy&filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id:'lf', table: 'sys_ui_policy', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})">${UI Policies} <span class="badge pull-right" ng-if="f.policy.length">{{f.policy.length}}</span></a></li>
              <li ng-if="::data.isAdmin"><a href="?id=lf&table=sys_script_client&filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id: 'lf', table: 'sys_script_client', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})">${Client Scripts} <span class="badge pull-right" ng-if="adminMenu.getClientScriptCount()">{{adminMenu.getClientScriptCount()}}</span></a></li>
              <li ng-if="getUIActions('context').length > 0 &&  data.isAdmin" role="separator" class="divider"></li>
              <li ng-repeat="action in getUIActions('context')"><a href="" ng-click="triggerUIAction(action)">{{action.name}}</a></li>
              <li ng-if="::data.isAdmin || getUIActions('context').length > 0" role="separator" class="divider"></li>
              <li><a target="_new" href="/{{data.f.table}}.do?PDF&sys_id={{data.sys_id}}&sysparm_view={{data.f.view}}">${Export to PDF}</a></li>
              <li><a target="_new" href="/{{data.f.table}}.do?PDF&landscape=true&sys_id={{data.sys_id}}&sysparm_view={{data.f.view}}">${Export to PDF (landscape)}</a></li>
            </ul>
        </span>

      <span class="panel-title" aria-label="{{data.f.title}}">{{data.f.title}} </span>
      <span ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span>
      
 <!-- we are  here -->

        <div ng-if="attachmentHandler && data.canAttach" title="{{::data.addAttachmentMsg}}" class="pull-right attachment-button">
      <!--  <span ng-show="warningShow" class="text-danger pull-left"><i class="fa fa-warning fa-1x" title="warning!"></i> Warning! Attachment submitted will be visible by the Scholar</span>
       --> <sp-attachment-button></sp-attachment-button>
      </div>
      

    <div class="panel-body">
      <!-- performance debug -->
      <div ng-if="data.show_sql">
        <div class="comment">
          <span ng-if="data.f._perf.sql_count">${SQL Statements {{data.f._perf.sql_count}}}, </span>
          <span>${Time {{data.f._perf.time}}}</span>
        </div>
        <div ng-repeat="s in data.f._perf.sql" class="{{s.type}}">
          {{s.statement}}
        </div>
      </div>
      <!-- attachments -->
      <sp-attachment-manager table="data.table" sys-id="data.f._attachmentGUID" omit-edit="!data.canAttach">
      </sp-attachment-manager>
      
      <!-- form -->
      <div>
        <sp-model form_model="data.f" mandatory="mandatory"></sp-model>
      </div>
      <!-- UI Action Links -->
      <div ng-if="getUIActions('link').length > 0">
        <label style="margin: 0;">${Related Links}</label>
        <div ng-repeat="action in getUIActions('link')">
          <a href ng-click="triggerUIAction(action)">{{action.name}}</a>
        </div>
      </div>
      
      <!-- related lists -->
      <div ng-if="!data.hideRelatedLists">
        <label style="margin: 0">${Related Lists}</label>
        <div style="margin-bottom: 7px; padding-bottom: 7px; border-bottom: 1px solid #f5f5f5;">
          <span ng-repeat="rl in data.f._related_lists" ng-if="rl.visible">
            <a ng-if="rl.type != 'REL'" href="?id=lf&table={{rl.table}}&filter={{rl.field}}%3D{{data.f.sys_id}}&view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{rl.table}}', filter: '{{rl.field}}%3D{{data.f.sys_id}}'})">{{rl.plural}}
              <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
            </a>
            <a ng-if="rl.type == 'REL'" href="?id=lf&table={{rl.table}}&relationship_id={{rl.relationship_id}}&apply_to={{rl.apply_to}}&apply_to_sys_id={{rl.apply_to_sys_id}}&view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{rl.table}}', apply_to: '{{rl.apply_to}}', apply_to_sys_id: '{{rl.apply_to_sys_id}}', relationship_id: '{{rl.relationship_id}}'})">{{rl.label}}
              <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
            </a>
            <span ng-if="!$last" style="padding-left: .5em; padding-right: .5em;" aria-hidden="true"> | </span>
          </span>
        </div>
      </div>
    </div>

    <div class="panel-footer">
      <button ng-click="triggerUIAction(action)" ng-repeat="action in getUIActions('button')" class="btn btn-default action-btn">{{action.name}}</button>
      <span>{{status}}</span>
      
      <button ng-show="deleteButton" ng-if="getPrimaryAction()" type="submit"  class="btn btn-danger action-btn pull-right">Delete </button>
    
      <button ng-if="getPrimaryAction()" type="submit" ng-click="triggerUIAction(getPrimaryAction())"  class="btn btn-primary action-btn pull-right">${Save} <span ng-if="saveButtonSuffix">(${{{saveButtonSuffix}}})</span></button>
    
      <div style="clear: both;"></div>
      <div ng-if="mandatory.length" class="alert alert-info" style="margin-top: .5em">
        <span ng-if="mandatory.length > 0">${Required information} </span>
        <span ng-repeat="f in mandatory" class="label label-danger" style="margin-right: .5em; display: inline-block;">{{f.label}}</span>
      </div>
    </div>
  </div>
</div>
  
  <!--
  <script type="text/javascript">
    if ($) {
      $(document).ready(
        function() {
          $('.sp-attachment-manager').addClass('displayNone');
          $('.sp-attachment-manager').text('Attachments hidden by Admin');
        }
      );
    }
  </script>
-->
  
  
  ]]></template>
    </sp_widget>
</record_update>
